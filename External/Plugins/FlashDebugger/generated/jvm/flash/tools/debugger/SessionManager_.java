// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package flash.tools.debugger;

@net.sf.jni4net.attributes.ClrTypeInfo
public final class SessionManager_ {
    
    //<generated-static>
    private static system.Type staticType;
    
    public static system.Type typeof() {
        return flash.tools.debugger.SessionManager_.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        flash.tools.debugger.SessionManager_.staticType = staticType;
    }
    //</generated-static>
}

//<generated-proxy>
@net.sf.jni4net.attributes.ClrProxy
class __SessionManager extends system.Object implements flash.tools.debugger.SessionManager {
    
    protected __SessionManager(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;")
    public native flash.tools.debugger.Session accept(flash.tools.debugger.IProgress par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;")
    public native flash.tools.debugger.Session connect(int par0, flash.tools.debugger.IProgress par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/String;)V")
    public native void setPreference(java.lang.String par0, java.lang.String par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;I)V")
    public native void setPreference(java.lang.String par0, int par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;)I")
    public native int getPreference(java.lang.String par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void startListening();
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void stopListening();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isListening();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/Object;ZLflash/tools/debugger/IProgress;Ljava/lang/Object;)Lflash/tools/debugger/Session;")
    public native flash.tools.debugger.Session launch(java.lang.String par0, flash.tools.debugger.AIRLaunchInfo par1, boolean par2, flash.tools.debugger.IProgress par3, flash.tools.debugger.ILaunchNotification par4);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;")
    public native flash.tools.debugger.Player playerForUri(java.lang.String par0, flash.tools.debugger.AIRLaunchInfo par1);
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean supportsLaunch();
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/Object;)V")
    public native void setDebuggerCallbacks(flash.tools.debugger.IDebuggerCallbacks par0);
    
    @net.sf.jni4net.attributes.ClrMethod("()V")
    public native void stopConnecting();
    
    @net.sf.jni4net.attributes.ClrMethod("()Z")
    public native boolean isConnecting();
}
//</generated-proxy>
