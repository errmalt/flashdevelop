// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package flash.tools.debugger;

@net.sf.jni4net.attributes.ClrTypeInfo
public final class IsolateController_ {
    
    //<generated-static>
    private static system.Type staticType;
    
    public static system.Type typeof() {
        return flash.tools.debugger.IsolateController_.staticType;
    }
    
    private static void InitJNI(net.sf.jni4net.inj.INJEnv env, system.Type staticType) {
        flash.tools.debugger.IsolateController_.staticType = staticType;
    }
    //</generated-static>
}

//<generated-proxy>
@net.sf.jni4net.attributes.ClrProxy
class __IsolateController extends system.Object implements flash.tools.debugger.IsolateController {
    
    protected __IsolateController(net.sf.jni4net.inj.INJEnv __env, long __handle) {
            super(__env, __handle);
    }
    
    @net.sf.jni4net.attributes.ClrMethod("(ZI)V")
    public native void breakOnCaughtExceptions(boolean par0, int par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)Z")
    public native boolean supportsWatchpoints(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)Z")
    public native boolean playerCanBreakOnAllExceptions(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)Z")
    public native boolean supportsWideLineNumbers(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)Z")
    public native boolean playerCanCallFunctions(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void resumeWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void suspendWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)Z")
    public native boolean isWorkerSuspended(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)I")
    public native int suspendReasonWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)[Lflash/tools/debugger/Frame;")
    public native flash.tools.debugger.Frame[] getFramesWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void stepIntoWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void stepOutWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void stepOverWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)V")
    public native void stepContinueWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)[Lflash/tools/debugger/SwfInfo;")
    public native flash.tools.debugger.SwfInfo[] getSwfsWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(III)Lflash/tools/debugger/Location;")
    public native flash.tools.debugger.Location setBreakpointWorker(int par0, int par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)[Ljava/lang/Object;")
    public native flash.tools.debugger.Watch[] getWatchListWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(I)[Lflash/tools/debugger/Variable;")
    public native flash.tools.debugger.Variable[] getVariableListWorker(int par0);
    
    @net.sf.jni4net.attributes.ClrMethod("(JI)Lflash/tools/debugger/Value;")
    public native flash.tools.debugger.Value getValueWorker(long par0, int par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;I)Lflash/tools/debugger/Value;")
    public native flash.tools.debugger.Value getGlobalWorker(java.lang.String par0, int par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Ljava/lang/String;I)Z")
    public native boolean evalIsWorker(flash.tools.debugger.Value par0, java.lang.String par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Lflash/tools/debugger/Value;I)Z")
    public native boolean evalIsWorker(flash.tools.debugger.Value par0, flash.tools.debugger.Value par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Lflash/tools/debugger/Value;I)Z")
    public native boolean evalInstanceofWorker(flash.tools.debugger.Value par0, flash.tools.debugger.Value par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Ljava/lang/String;I)Z")
    public native boolean evalInstanceofWorker(flash.tools.debugger.Value par0, java.lang.String par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Lflash/tools/debugger/Value;I)Z")
    public native boolean evalInWorker(flash.tools.debugger.Value par0, flash.tools.debugger.Value par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Lflash/tools/debugger/Value;I)Lflash/tools/debugger/Value;")
    public native flash.tools.debugger.Value evalAsWorker(flash.tools.debugger.Value par0, flash.tools.debugger.Value par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Lflash/tools/debugger/Value;Ljava/lang/String;[Lflash/tools/debugger/Value;I)Lflash/tools/debugger/Value;")
    public native flash.tools.debugger.Value callFunctionWorker(flash.tools.debugger.Value par0, java.lang.String par1, flash.tools.debugger.Value[] par2, int par3);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;[Lflash/tools/debugger/Value;I)Lflash/tools/debugger/Value;")
    public native flash.tools.debugger.Value callConstructorWorker(java.lang.String par0, flash.tools.debugger.Value[] par1, int par2);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;I)Z")
    public native boolean setExceptionBreakpointWorker(java.lang.String par0, int par1);
    
    @net.sf.jni4net.attributes.ClrMethod("(Ljava/lang/String;I)Z")
    public native boolean clearExceptionBreakpointWorker(java.lang.String par0, int par1);
}
//</generated-proxy>
