//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace flash.tools.debugger.expression {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaClassAttribute()]
    public partial class ASTBuilder : global::java.lang.Object, global::flash.tools.debugger.expression.IASTBuilder {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _parse0;
        
        internal static global::net.sf.jni4net.jni.MethodId _isIndirectionOperatorAllowed1;
        
        internal static global::net.sf.jni4net.jni.MethodId @__ctorASTBuilder2;
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Z)V")]
        public ASTBuilder(bool par0) : 
                base(((global::net.sf.jni4net.jni.JNIEnv)(null))) {
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.NewObject(global::flash.tools.debugger.expression.ASTBuilder.staticClass, global::flash.tools.debugger.expression.ASTBuilder.@__ctorASTBuilder2, this, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par0));
            }
        }
        
        protected ASTBuilder(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        public static global::java.lang.Class _class {
            get {
                return global::flash.tools.debugger.expression.ASTBuilder.staticClass;
            }
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::flash.tools.debugger.expression.ASTBuilder.staticClass = @__class;
            global::flash.tools.debugger.expression.ASTBuilder._parse0 = @__env.GetMethodID(global::flash.tools.debugger.expression.ASTBuilder.staticClass, "parse", "(Ljava/io/Reader;)Lflash/tools/debugger/expression/ValueExp;");
            global::flash.tools.debugger.expression.ASTBuilder._isIndirectionOperatorAllowed1 = @__env.GetMethodID(global::flash.tools.debugger.expression.ASTBuilder.staticClass, "isIndirectionOperatorAllowed", "()Z");
            global::flash.tools.debugger.expression.ASTBuilder.@__ctorASTBuilder2 = @__env.GetMethodID(global::flash.tools.debugger.expression.ASTBuilder.staticClass, "<init>", "(Z)V");
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/io/Reader;)Lflash/tools/debugger/expression/ValueExp;")]
        public virtual global::flash.tools.debugger.expression.ValueExp parse(global::java.io.Reader par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.expression.ValueExp>(@__env, @__env.CallObjectMethodPtr(this, global::flash.tools.debugger.expression.ASTBuilder._parse0, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        public virtual bool isIndirectionOperatorAllowed() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::flash.tools.debugger.expression.ASTBuilder._isIndirectionOperatorAllowed1)));
            }
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::flash.tools.debugger.expression.ASTBuilder(@__env);
            }
        }
    }
    #endregion
}
