//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace flash.tools.debugger {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute()]
    public partial interface SessionManager {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;")]
        global::flash.tools.debugger.Session accept(global::flash.tools.debugger.IProgress par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;")]
        global::flash.tools.debugger.Session connect(int par0, global::flash.tools.debugger.IProgress par1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/String;Ljava/lang/String;)V")]
        void setPreference(global::java.lang.String par0, global::java.lang.String par1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/String;I)V")]
        void setPreference(global::java.lang.String par0, int par1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/String;)I")]
        int getPreference(global::java.lang.String par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void startListening();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void stopListening();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool isListening();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;ZLflash/tools/debugger/IPr" +
            "ogress;Lflash/tools/debugger/ILaunchNotification;)Lflash/tools/debugger/Session;" +
            "")]
        global::flash.tools.debugger.Session launch(global::java.lang.String par0, global::java.lang.Object par1, bool par2, global::flash.tools.debugger.IProgress par3, global::java.lang.Object par4);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;)Lflash/tools/debugger/Pla" +
            "yer;")]
        global::java.lang.Object playerForUri(global::java.lang.String par0, global::java.lang.Object par1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool supportsLaunch();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Lflash/tools/debugger/IDebuggerCallbacks;)V")]
        void setDebuggerCallbacks(global::java.lang.Object par0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void stopConnecting();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool isConnecting();
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class SessionManager_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::flash.tools.debugger.@__SessionManager.staticClass;
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_ACCEPT_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_ACCEPT_TIMEOUT14));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_URI_MODIFICATION {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_URI_MODIFICATION15));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_RESPONSE_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_RESPONSE_TIMEOUT16));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_SOCKET_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_SOCKET_TIMEOUT17));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_CONTEXT_RESPONSE_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_CONTEXT_RESPONSE_TIMEOUT18));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_GETVAR_RESPONSE_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_GETVAR_RESPONSE_TIMEOUT19));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_SETVAR_RESPONSE_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_SETVAR_RESPONSE_TIMEOUT20));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_SWFSWD_LOAD_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_SWFSWD_LOAD_TIMEOUT21));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_SUSPEND_WAIT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_SUSPEND_WAIT22));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_INVOKE_GETTERS {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_INVOKE_GETTERS23));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PLAYER_SUPPORTS_GET {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PLAYER_SUPPORTS_GET24));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_HIERARCHICAL_VARIABLES {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_HIERARCHICAL_VARIABLES25));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_CONNECT_TIMEOUT {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_TIMEOUT26));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_CONNECT_WAIT_INTERVAL {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_WAIT_INTERVAL27));
            }
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("Ljava/lang/String;")]
        public static global::java.lang.String PREF_CONNECT_RETRY_ATTEMPTS {
            get {
                global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.ThreadEnv;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
                return global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, @__env.GetStaticObjectFieldPtr(global::flash.tools.debugger.@__SessionManager.staticClass, global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_RETRY_ATTEMPTS28));
            }
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::flash.tools.debugger.SessionManager), typeof(global::flash.tools.debugger.SessionManager_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::flash.tools.debugger.SessionManager), typeof(global::flash.tools.debugger.SessionManager_))]
    internal sealed partial class @__SessionManager : global::java.lang.Object, global::flash.tools.debugger.SessionManager {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId _accept0;
        
        internal static global::net.sf.jni4net.jni.MethodId _connect1;
        
        internal static global::net.sf.jni4net.jni.MethodId _setPreference2;
        
        internal static global::net.sf.jni4net.jni.MethodId _setPreference3;
        
        internal static global::net.sf.jni4net.jni.MethodId _getPreference4;
        
        internal static global::net.sf.jni4net.jni.MethodId _startListening5;
        
        internal static global::net.sf.jni4net.jni.MethodId _stopListening6;
        
        internal static global::net.sf.jni4net.jni.MethodId _isListening7;
        
        internal static global::net.sf.jni4net.jni.MethodId _launch8;
        
        internal static global::net.sf.jni4net.jni.MethodId _playerForUri9;
        
        internal static global::net.sf.jni4net.jni.MethodId _supportsLaunch10;
        
        internal static global::net.sf.jni4net.jni.MethodId _setDebuggerCallbacks11;
        
        internal static global::net.sf.jni4net.jni.MethodId _stopConnecting12;
        
        internal static global::net.sf.jni4net.jni.MethodId _isConnecting13;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_ACCEPT_TIMEOUT14;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_URI_MODIFICATION15;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_RESPONSE_TIMEOUT16;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_SOCKET_TIMEOUT17;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_CONTEXT_RESPONSE_TIMEOUT18;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_GETVAR_RESPONSE_TIMEOUT19;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_SETVAR_RESPONSE_TIMEOUT20;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_SWFSWD_LOAD_TIMEOUT21;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_SUSPEND_WAIT22;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_INVOKE_GETTERS23;
        
        internal static global::net.sf.jni4net.jni.FieldId _PLAYER_SUPPORTS_GET24;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_HIERARCHICAL_VARIABLES25;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_CONNECT_TIMEOUT26;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_CONNECT_WAIT_INTERVAL27;
        
        internal static global::net.sf.jni4net.jni.FieldId _PREF_CONNECT_RETRY_ATTEMPTS28;
        
        private @__SessionManager(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::flash.tools.debugger.@__SessionManager.staticClass = @__class;
            global::flash.tools.debugger.@__SessionManager._accept0 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "accept", "(Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;");
            global::flash.tools.debugger.@__SessionManager._connect1 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "connect", "(ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;");
            global::flash.tools.debugger.@__SessionManager._setPreference2 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "setPreference", "(Ljava/lang/String;Ljava/lang/String;)V");
            global::flash.tools.debugger.@__SessionManager._setPreference3 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "setPreference", "(Ljava/lang/String;I)V");
            global::flash.tools.debugger.@__SessionManager._getPreference4 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "getPreference", "(Ljava/lang/String;)I");
            global::flash.tools.debugger.@__SessionManager._startListening5 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "startListening", "()V");
            global::flash.tools.debugger.@__SessionManager._stopListening6 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "stopListening", "()V");
            global::flash.tools.debugger.@__SessionManager._isListening7 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "isListening", "()Z");
            global::flash.tools.debugger.@__SessionManager._launch8 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "launch", "(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;ZLflash/tools/debugger/IPr" +
                    "ogress;Lflash/tools/debugger/ILaunchNotification;)Lflash/tools/debugger/Session;" +
                    "");
            global::flash.tools.debugger.@__SessionManager._playerForUri9 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "playerForUri", "(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;)Lflash/tools/debugger/Pla" +
                    "yer;");
            global::flash.tools.debugger.@__SessionManager._supportsLaunch10 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "supportsLaunch", "()Z");
            global::flash.tools.debugger.@__SessionManager._setDebuggerCallbacks11 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "setDebuggerCallbacks", "(Lflash/tools/debugger/IDebuggerCallbacks;)V");
            global::flash.tools.debugger.@__SessionManager._stopConnecting12 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "stopConnecting", "()V");
            global::flash.tools.debugger.@__SessionManager._isConnecting13 = @__env.GetMethodID(global::flash.tools.debugger.@__SessionManager.staticClass, "isConnecting", "()Z");
            global::flash.tools.debugger.@__SessionManager._PREF_ACCEPT_TIMEOUT14 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_ACCEPT_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_URI_MODIFICATION15 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_URI_MODIFICATION", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_RESPONSE_TIMEOUT16 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_RESPONSE_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_SOCKET_TIMEOUT17 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_SOCKET_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_CONTEXT_RESPONSE_TIMEOUT18 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_CONTEXT_RESPONSE_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_GETVAR_RESPONSE_TIMEOUT19 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_GETVAR_RESPONSE_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_SETVAR_RESPONSE_TIMEOUT20 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_SETVAR_RESPONSE_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_SWFSWD_LOAD_TIMEOUT21 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_SWFSWD_LOAD_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_SUSPEND_WAIT22 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_SUSPEND_WAIT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_INVOKE_GETTERS23 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_INVOKE_GETTERS", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PLAYER_SUPPORTS_GET24 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PLAYER_SUPPORTS_GET", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_HIERARCHICAL_VARIABLES25 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_HIERARCHICAL_VARIABLES", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_TIMEOUT26 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_CONNECT_TIMEOUT", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_WAIT_INTERVAL27 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_CONNECT_WAIT_INTERVAL", "Ljava/lang/String;");
            global::flash.tools.debugger.@__SessionManager._PREF_CONNECT_RETRY_ATTEMPTS28 = @__env.GetStaticFieldID(global::flash.tools.debugger.@__SessionManager.staticClass, "PREF_CONNECT_RETRY_ATTEMPTS", "Ljava/lang/String;");
        }
        
        public global::flash.tools.debugger.Session accept(global::flash.tools.debugger.IProgress par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.Session>(@__env, @__env.CallObjectMethodPtr(this, global::flash.tools.debugger.@__SessionManager._accept0, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::flash.tools.debugger.IProgress>(@__env, par0)));
            }
        }
        
        public global::flash.tools.debugger.Session connect(int par0, global::flash.tools.debugger.IProgress par1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.Session>(@__env, @__env.CallObjectMethodPtr(this, global::flash.tools.debugger.@__SessionManager._connect1, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::flash.tools.debugger.IProgress>(@__env, par1)));
            }
        }
        
        public void setPreference(global::java.lang.String par0, global::java.lang.String par1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._setPreference2, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par1));
            }
        }
        
        public void setPreference(global::java.lang.String par0, int par1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._setPreference3, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par1));
            }
        }
        
        public int getPreference(global::java.lang.String par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return ((int)(@__env.CallIntMethod(this, global::flash.tools.debugger.@__SessionManager._getPreference4, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0))));
            }
        }
        
        public void startListening() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._startListening5);
            }
        }
        
        public void stopListening() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._stopListening6);
            }
        }
        
        public bool isListening() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::flash.tools.debugger.@__SessionManager._isListening7)));
            }
        }
        
        public global::flash.tools.debugger.Session launch(global::java.lang.String par0, global::java.lang.Object par1, bool par2, global::flash.tools.debugger.IProgress par3, global::java.lang.Object par4) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 20)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.Session>(@__env, @__env.CallObjectMethodPtr(this, global::flash.tools.debugger.@__SessionManager._launch8, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par1), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(par2), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::flash.tools.debugger.IProgress>(@__env, par3), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, par4)));
            }
        }
        
        public global::java.lang.Object playerForUri(global::java.lang.String par0, global::java.lang.Object par1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::flash.tools.debugger.@__SessionManager._playerForUri9, global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par0), global::net.sf.jni4net.utils.Convertor.ParStrongCp2J(par1)));
            }
        }
        
        public bool supportsLaunch() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::flash.tools.debugger.@__SessionManager._supportsLaunch10)));
            }
        }
        
        public void setDebuggerCallbacks(global::java.lang.Object par0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._setDebuggerCallbacks11, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, par0));
            }
        }
        
        public void stopConnecting() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::flash.tools.debugger.@__SessionManager._stopConnecting12);
            }
        }
        
        public bool isConnecting() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::flash.tools.debugger.@__SessionManager._isConnecting13)));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__SessionManager);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "accept", "accept0", "(Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "connect", "connect1", "(ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setPreference", "setPreference2", "(Ljava/lang/String;Ljava/lang/String;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setPreference", "setPreference3", "(Ljava/lang/String;I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getPreference", "getPreference4", "(Ljava/lang/String;)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "startListening", "startListening5", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "stopListening", "stopListening6", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isListening", "isListening7", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "launch", "launch8", "(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;ZLflash/tools/debugger/IPr" +
                        "ogress;Lflash/tools/debugger/ILaunchNotification;)Lflash/tools/debugger/Session;" +
                        ""));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "playerForUri", "playerForUri9", "(Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;)Lflash/tools/debugger/Pla" +
                        "yer;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "supportsLaunch", "supportsLaunch10", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setDebuggerCallbacks", "setDebuggerCallbacks11", "(Lflash/tools/debugger/IDebuggerCallbacks;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "stopConnecting", "stopConnecting12", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isConnecting", "isConnecting13", "()Z"));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle accept0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;
            // (Lflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::flash.tools.debugger.Session>(@__env, @__real.accept(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.IProgress>(@__env, par0)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle connect1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int par0, global::net.sf.jni4net.utils.JniLocalHandle par1) {
            // (ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;
            // (ILflash/tools/debugger/IProgress;)Lflash/tools/debugger/Session;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::flash.tools.debugger.Session>(@__env, @__real.connect(par0, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.IProgress>(@__env, par1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setPreference2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0, global::net.sf.jni4net.utils.JniLocalHandle par1) {
            // (Ljava/lang/String;Ljava/lang/String;)V
            // (Ljava/lang/String;Ljava/lang/String;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.setPreference(global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par0), global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par1));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void setPreference3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0, int par1) {
            // (Ljava/lang/String;I)V
            // (Ljava/lang/String;I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.setPreference(global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par0), par1);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static int getPreference4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Ljava/lang/String;)I
            // (Ljava/lang/String;)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = ((int)(@__real.getPreference(global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par0))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void startListening5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.startListening();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void stopListening6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.stopListening();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool isListening7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = ((bool)(@__real.isListening()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle launch8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0, global::net.sf.jni4net.utils.JniLocalHandle par1, bool par2, global::net.sf.jni4net.utils.JniLocalHandle par3, global::net.sf.jni4net.utils.JniLocalHandle par4) {
            // (Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;ZLflash/tools/debugger/IProgress;Lflash/tools/debugger/ILaunchNotification;)Lflash/tools/debugger/Session;
            // (Ljava/lang/String;Ljava/lang/Object;ZLflash/tools/debugger/IProgress;Ljava/lang/Object;)Lflash/tools/debugger/Session;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::flash.tools.debugger.Session>(@__env, @__real.launch(global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par0), global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.lang.Object>(@__env, par1), par2, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.IProgress>(@__env, par3), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, par4)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle playerForUri9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0, global::net.sf.jni4net.utils.JniLocalHandle par1) {
            // (Ljava/lang/String;Lflash/tools/debugger/AIRLaunchInfo;)Lflash/tools/debugger/Player;
            // (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.playerForUri(global::net.sf.jni4net.utils.Convertor.StrongJ2CpString(@__env, par0), global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.lang.Object>(@__env, par1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool supportsLaunch10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = ((bool)(@__real.supportsLaunch()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void setDebuggerCallbacks11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle par0) {
            // (Lflash/tools/debugger/IDebuggerCallbacks;)V
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.setDebuggerCallbacks(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, par0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void stopConnecting12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__real.stopConnecting();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool isConnecting13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::flash.tools.debugger.SessionManager @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::flash.tools.debugger.SessionManager>(@__env, @__obj);
            @__return = ((bool)(@__real.isConnecting()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::flash.tools.debugger.@__SessionManager(@__env);
            }
        }
    }
    #endregion
}
